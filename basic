## bootlimit

library(bootstrap);
bootlimit <- function(stat, alpha, n){
  
  theta <- function(x)
  {
    quantile(x, 1-alpha);      ## 0.05<-percentile 
  }
  
  result <- bootstrap(as.matrix(stat), n, theta);
  
  value = mean(result$thetastar);
  
  ret <- value
  
  ## testing
  return(ret)
}

## MSET with Linear regression

mset_Regress = function(trdat, tedat, alpha) {
  
  ## training
  y_hat_tr = matrix(numeric(0), nrow(trdat),ncol(trdat) ) 
  y_hat_ts = matrix(numeric(0), nrow(tedat),ncol(tedat) ) 
  resid_mat_tr = matrix(numeric(0), nrow(trdat),ncol(trdat) )
  resid_mat_ts = matrix(numeric(0), nrow(tedat),ncol(tedat) )
  
  for ( i in 1:ncol(trdat) ) {
    y_hat_tr[,i] = as.matrix(trdat[,-i])%*%inv(t(as.matrix(trdat[,-i]))%*%as.matrix(trdat[,-i])) %*% t(as.matrix(trdat[,-i]))%*%trdat[,i]
 
    resid_mat_tr[,i] = trdat[,i] - y_hat_tr[,i];
  } 
  
  ## control limit
  ucl = matrix(0,1,ncol(resid_mat_tr))
  lcl = matrix(0,1,ncol(resid_mat_tr))
  
  for (i in 1:ncol(trdat)){   ## cl calculation with bootstrap
  ucl[,i] = bootlimit(na.approx(resid_mat_tr[,i]), alpha, 50)
  lcl[,i] = bootlimit(na.approx(resid_mat_tr[,i]), 1-alpha, 50)
  } 

  for ( i in 1:ncol(tedat) ) {
    y_hat_ts[,i] = as.matrix(tedat[,-i])%*%inv(t(as.matrix(trdat[,-i]))%*%as.matrix(trdat[,-i])) %*% t(as.matrix(trdat[,-i]))%*%trdat[,i]
    resid_mat_ts[,i] = tedat[,i] - y_hat_ts[,i];
    
  }
  
  ret <- list(
    resid_tr = resid_mat_tr, 
    resid_ts = resid_mat_ts,
    ucl = ucl,
    lcl = lcl
  )
  
  ## testing
  return(ret)
}
